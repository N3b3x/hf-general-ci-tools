---
name: C/C++ Lint (Reusable)

on:
  workflow_call:
    inputs:
      clang_version:
        description: "Clang major version"
        type: string
        default: "20"
      style:
        description: "clang-format style (llvm, google, webkit, or 'file' to use .clang-format)"
        type: string
        default: "file"
      tidy_checks:
        description: "clang-tidy checks (comma-separated glob patterns, use - prefix to disable)"
        type: string
        required: false
      extensions:
        description: "File extensions to check (comma-separated)"
        type: string
        default: "c,cpp,cc,cxx,h,hpp"
      ignore:
        description: "Files or directories to exclude from linting (pipe-separated)"
        type: string
        default: "build|.git"
      files_changed_only:
        description: "Only lint files that have been changed in the pull request"
        type: boolean
        default: false
      lines_changed_only:
        description: "Only inspect lines that have changed in the pull request"
        type: boolean
        default: false
      step_summary:
        description: "Add a summary of linting results to the workflow step summary"
        type: boolean
        default: true
      file_annotations:
        description: "Display linting errors and warnings as file annotations in the GitHub UI"
        type: boolean
        default: true
      thread_comments:
        description: "Post a single, collapsible thread comment in a pull request detailing all linting issues"
        type: boolean
        default: false

permissions:
  pull-requests: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run C/C++ Linter
        uses: cpp-linter/cpp-linter-action@v2
        with:
          style: ${{ inputs.style }}
          tidy-checks: ${{ inputs.tidy_checks }}
          version: ${{ inputs.clang_version }}
          extensions: ${{ inputs.extensions }}
          ignore: ${{ inputs.ignore }}
          files-changed-only: ${{ inputs.files_changed_only }}
          lines-changed-only: ${{ inputs.lines_changed_only }}
          file-annotations: ${{ inputs.file_annotations }}
          step-summary: ${{ inputs.step_summary }}
          thread-comments: ${{ inputs.thread_comments }}
          repo-root: '.'
